steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/atomic-segment-442210-n3/hello-repo/hello-python-app', '.']

  # Step 2: Push Docker image to the registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/atomic-segment-442210-n3/hello-repo/hello-python-app']

  # Step 3: Get credentials for Kubernetes cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'hello-private-cluster'
      - '--region'
      - 'us-central1'  # Use the region for the cluster
      - '--project'
      - 'atomic-segment-442210-n3'

  # Step 4: SSH into the Bastion VM and apply Kubernetes manifests
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'compute'
      - 'ssh'
      - '--project'
      - 'atomic-segment-442210-n3'
      - '--zone'
      - 'us-central1-a'  # Zone where the Bastion VM is located
      - '--ssh-key-file=/builder/home/.ssh/google_compute_engine'
      - '--command="kubectl apply -f deployment.yaml && kubectl apply -f service.yaml"'

  # Step 5: Deploy to Google App Engine (if needed)
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['app', 'deploy']

options:
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET

