steps:
  # Step 1: Checkout the source code
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/HarshJain975/hello-python-app.git']

  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/elite-flow-446700-k5/python-app:$SHORT_SHA'
      - '.'

  # Step 3: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/elite-flow-446700-k5/python-app:$SHORT_SHA'

  # Step 4: Authenticate kubectl with GKE cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'hello-python'           # Ensure the correct cluster name here
      - '--region'
      - 'us-central1'            # Ensure the correct region here

  # Step 5: Update the image in the deployment to the newly built Docker image
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/python-app'
      - 'python-app=gcr.io/elite-flow-446700-k5/python-app:$SHORT_SHA'
      # Optionally add --namespace=your-namespace if you're using a custom namespace

  # Step 6: Check rollout status to ensure the deployment is successful
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'rollout'
      - 'status'
      - 'deployment/python-app'
      # Optionally add --namespace=your-namespace if you're using a custom namespace

images:
  - 'gcr.io/elite-flow-446700-k5/python-app:$SHORT_SHA'
