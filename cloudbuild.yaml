steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/atomic-segment-442210-n3/hello-repo/hello-python-app', '.']

  # Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/atomic-segment-442210-n3/hello-repo/hello-python-app']

  # Set up an SSH tunnel to Bastion VM
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # SSH into Bastion VM and forward port 8080 (or other ports) to localhost
        gcloud compute ssh bastion-host --zone us-central1-a --project atomic-segment-442210-n3 -- -N -L 8080:localhost:8080 &

  # Get Kubernetes credentials through the Bastion VM (via SSH)
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'hello-private-cluster'
      - '--region'
      - 'us-central1'
      - '--project'
      - 'atomic-segment-442210-n3'

  # Apply the Kubernetes deployment YAML
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'deployment.yaml']

  # Apply the Kubernetes service YAML
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'service.yaml']

  # Deploy the App to App Engine (if needed)
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['app', 'deploy']

options:
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET
